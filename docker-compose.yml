version: '3.9'

services:

  nginx-proxy:
    container_name: nginx-proxy
    image: nginx:latest
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./configs/nginx/conf.d:/etc/nginx/conf.d
      - ./configs/nginx/vhost.d:/etc/nginx/vhost.d
      - ./configs/nginx/html:/usr/share/nginx/html
      - ./configs/nginx/certs:/etc/nginx/certs:ro
    networks:
      - jiranet
    logging:
      driver: syslog
      options:
        tag: "docker/nginx-proxy"

  nginx-gen:
    container_name: nginx-gen
    image: jwilder/docker-gen
    restart: always
    command: -notify-sighup nginx-proxy -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    volumes_from:
      - nginx-proxy
    volumes:
      - ./configs/nginx-gen/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      - jiranet
    logging:
      driver: syslog
      options:
        tag: "docker/nginx-gen"

  # nginx-letsencrypt:
  #   container_name: nginx-letsencrypt
  #   image: jrcs/letsencrypt-nginx-proxy-companion
  #   restart: always
  #   environment:
  #     NGINX_PROXY_CONTAINER: nginx-proxy
  #     NGINX_DOCKER_GEN_CONTAINER: nginx-gen
  #   volumes_from:
  #     - nginx-proxy
  #   volumes:
  #     - ./configs/nginx/certs:/etc/nginx/certs:rw
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #   networks:
  #     - jiranet
  #   logging:
  #     driver: syslog
  #     options:
  #       tag: "docker/nginx-letsencrypt"

  jira:
    container_name: jira
    depends_on:
      - postgresql
    image: atlassian/jira-software:8.8.0
    command: bash -c "JAVA_OPTS=-javaagent:/crack/atlassian-agent.jar /opt/atlassian/jira/bin/start-jira.sh -fg"
    networks:
      - jiranet
    volumes:
      - ./volumes/jira_home_update:/var/atlassian/application-data/jira:rw
      - ./crack:/crack
    expose:
      - 8081
      - 8080
    ports:
      - 8080:8080
      - 8081:8081
    environment:
      - 'ATL_JDBC_URL=jdbc:postgresql://postgresql:5432/jiradb'
      - 'ATL_JDBC_USER=jiradbuser'
      - 'ATL_JDBC_PASSWORD=admin'
      - 'SETENV_JVM_MINIMUM_MEMORY=2048m'
      - 'SETENV_JVM_MAXIMUM_MEMORY=4096m'
      - 'JIRA_PROXY_NAME='
      - 'JIRA_PROXY_PORT='
      - 'JIRA_PROXY_SCHEME='
      - VIRTUAL_HOST=test.com
      - VIRTUAL_PORT=8080
      # - LETSENCRYPT_HOST=test.com
      # - LETSENCRYPT_EMAIL=webmaster@test.com
      - JVM_MINIMUM_MEMORY=2000m
      - JVM_MAXIMUM_MEMORY=4000m
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4000M
        reservations:
          cpus: '1.0'
          memory: 2000M


  postgresql:
    restart: always
    image: postgres:11
    container_name: pg-jira
    environment:
      - POSTGRES_USER=jiradbuser
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=jiradb
    volumes:
      - ./volumes/jira_postgres_update:/var/lib/postgresql/data:rw
      - /etc/localtime:/etc/localtime:ro
    networks:
      - jiranet
    logging:
      driver: syslog
      options:
        tag: docker/jira_postgres


networks:
  jiranet:
    driver: bridge
